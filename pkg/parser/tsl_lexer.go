// Code generated from TSL.g4 by ANTLR 4.7.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 32, 344,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 3, 2, 3, 2, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3,
	8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 12, 3,
	12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16,
	3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3,
	20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23,
	3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3,
	25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28,
	3, 28, 3, 28, 3, 28, 7, 28, 199, 10, 28, 12, 28, 14, 28, 202, 11, 28, 3,
	28, 3, 28, 3, 28, 3, 28, 3, 28, 7, 28, 209, 10, 28, 12, 28, 14, 28, 212,
	11, 28, 3, 28, 3, 28, 3, 28, 7, 28, 217, 10, 28, 12, 28, 14, 28, 220, 11,
	28, 3, 28, 3, 28, 3, 28, 7, 28, 225, 10, 28, 12, 28, 14, 28, 228, 11, 28,
	5, 28, 230, 10, 28, 3, 29, 6, 29, 233, 10, 29, 13, 29, 14, 29, 234, 3,
	29, 3, 29, 7, 29, 239, 10, 29, 12, 29, 14, 29, 242, 11, 29, 5, 29, 244,
	10, 29, 3, 29, 3, 29, 5, 29, 248, 10, 29, 3, 29, 6, 29, 251, 10, 29, 13,
	29, 14, 29, 252, 5, 29, 255, 10, 29, 3, 29, 3, 29, 6, 29, 259, 10, 29,
	13, 29, 14, 29, 260, 3, 29, 3, 29, 5, 29, 265, 10, 29, 3, 29, 6, 29, 268,
	10, 29, 13, 29, 14, 29, 269, 5, 29, 272, 10, 29, 5, 29, 274, 10, 29, 3,
	30, 3, 30, 3, 30, 3, 30, 7, 30, 280, 10, 30, 12, 30, 14, 30, 283, 11, 30,
	3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3,
	34, 3, 34, 3, 35, 3, 35, 3, 36, 3, 36, 3, 37, 3, 37, 3, 38, 3, 38, 3, 39,
	3, 39, 3, 40, 3, 40, 3, 41, 3, 41, 3, 42, 3, 42, 3, 43, 3, 43, 3, 44, 3,
	44, 3, 45, 3, 45, 3, 46, 3, 46, 3, 47, 3, 47, 3, 48, 3, 48, 3, 49, 3, 49,
	3, 50, 3, 50, 3, 51, 3, 51, 3, 52, 3, 52, 3, 53, 3, 53, 3, 54, 3, 54, 3,
	55, 3, 55, 3, 56, 3, 56, 3, 57, 3, 57, 3, 58, 3, 58, 2, 2, 59, 3, 3, 5,
	4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25,
	14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43,
	23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61,
	32, 63, 2, 65, 2, 67, 2, 69, 2, 71, 2, 73, 2, 75, 2, 77, 2, 79, 2, 81,
	2, 83, 2, 85, 2, 87, 2, 89, 2, 91, 2, 93, 2, 95, 2, 97, 2, 99, 2, 101,
	2, 103, 2, 105, 2, 107, 2, 109, 2, 111, 2, 113, 2, 115, 2, 3, 2, 37, 3,
	2, 36, 36, 3, 2, 98, 98, 3, 2, 95, 95, 5, 2, 67, 92, 97, 97, 99, 124, 6,
	2, 50, 59, 67, 92, 97, 97, 99, 124, 4, 2, 45, 45, 47, 47, 3, 2, 41, 41,
	5, 2, 11, 13, 15, 15, 34, 34, 3, 2, 50, 59, 4, 2, 67, 67, 99, 99, 4, 2,
	68, 68, 100, 100, 4, 2, 69, 69, 101, 101, 4, 2, 70, 70, 102, 102, 4, 2,
	71, 71, 103, 103, 4, 2, 72, 72, 104, 104, 4, 2, 73, 73, 105, 105, 4, 2,
	74, 74, 106, 106, 4, 2, 75, 75, 107, 107, 4, 2, 76, 76, 108, 108, 4, 2,
	77, 77, 109, 109, 4, 2, 78, 78, 110, 110, 4, 2, 79, 79, 111, 111, 4, 2,
	80, 80, 112, 112, 4, 2, 81, 81, 113, 113, 4, 2, 82, 82, 114, 114, 4, 2,
	83, 83, 115, 115, 4, 2, 84, 84, 116, 116, 4, 2, 85, 85, 117, 117, 4, 2,
	86, 86, 118, 118, 4, 2, 87, 87, 119, 119, 4, 2, 88, 88, 120, 120, 4, 2,
	89, 89, 121, 121, 4, 2, 90, 90, 122, 122, 4, 2, 91, 91, 123, 123, 4, 2,
	92, 92, 124, 124, 2, 338, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3,
	2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15,
	3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2,
	23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2,
	2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2,
	2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2,
	2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3,
	2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61,
	3, 2, 2, 2, 3, 117, 3, 2, 2, 2, 5, 119, 3, 2, 2, 2, 7, 121, 3, 2, 2, 2,
	9, 123, 3, 2, 2, 2, 11, 125, 3, 2, 2, 2, 13, 128, 3, 2, 2, 2, 15, 130,
	3, 2, 2, 2, 17, 133, 3, 2, 2, 2, 19, 135, 3, 2, 2, 2, 21, 138, 3, 2, 2,
	2, 23, 141, 3, 2, 2, 2, 25, 144, 3, 2, 2, 2, 27, 147, 3, 2, 2, 2, 29, 149,
	3, 2, 2, 2, 31, 151, 3, 2, 2, 2, 33, 153, 3, 2, 2, 2, 35, 155, 3, 2, 2,
	2, 37, 157, 3, 2, 2, 2, 39, 159, 3, 2, 2, 2, 41, 164, 3, 2, 2, 2, 43, 168,
	3, 2, 2, 2, 45, 171, 3, 2, 2, 2, 47, 179, 3, 2, 2, 2, 49, 182, 3, 2, 2,
	2, 51, 185, 3, 2, 2, 2, 53, 190, 3, 2, 2, 2, 55, 229, 3, 2, 2, 2, 57, 273,
	3, 2, 2, 2, 59, 275, 3, 2, 2, 2, 61, 286, 3, 2, 2, 2, 63, 290, 3, 2, 2,
	2, 65, 292, 3, 2, 2, 2, 67, 294, 3, 2, 2, 2, 69, 296, 3, 2, 2, 2, 71, 298,
	3, 2, 2, 2, 73, 300, 3, 2, 2, 2, 75, 302, 3, 2, 2, 2, 77, 304, 3, 2, 2,
	2, 79, 306, 3, 2, 2, 2, 81, 308, 3, 2, 2, 2, 83, 310, 3, 2, 2, 2, 85, 312,
	3, 2, 2, 2, 87, 314, 3, 2, 2, 2, 89, 316, 3, 2, 2, 2, 91, 318, 3, 2, 2,
	2, 93, 320, 3, 2, 2, 2, 95, 322, 3, 2, 2, 2, 97, 324, 3, 2, 2, 2, 99, 326,
	3, 2, 2, 2, 101, 328, 3, 2, 2, 2, 103, 330, 3, 2, 2, 2, 105, 332, 3, 2,
	2, 2, 107, 334, 3, 2, 2, 2, 109, 336, 3, 2, 2, 2, 111, 338, 3, 2, 2, 2,
	113, 340, 3, 2, 2, 2, 115, 342, 3, 2, 2, 2, 117, 118, 7, 42, 2, 2, 118,
	4, 3, 2, 2, 2, 119, 120, 7, 46, 2, 2, 120, 6, 3, 2, 2, 2, 121, 122, 7,
	43, 2, 2, 122, 8, 3, 2, 2, 2, 123, 124, 7, 62, 2, 2, 124, 10, 3, 2, 2,
	2, 125, 126, 7, 62, 2, 2, 126, 127, 7, 63, 2, 2, 127, 12, 3, 2, 2, 2, 128,
	129, 7, 64, 2, 2, 129, 14, 3, 2, 2, 2, 130, 131, 7, 64, 2, 2, 131, 132,
	7, 63, 2, 2, 132, 16, 3, 2, 2, 2, 133, 134, 7, 63, 2, 2, 134, 18, 3, 2,
	2, 2, 135, 136, 7, 35, 2, 2, 136, 137, 7, 63, 2, 2, 137, 20, 3, 2, 2, 2,
	138, 139, 7, 62, 2, 2, 139, 140, 7, 64, 2, 2, 140, 22, 3, 2, 2, 2, 141,
	142, 7, 128, 2, 2, 142, 143, 7, 63, 2, 2, 143, 24, 3, 2, 2, 2, 144, 145,
	7, 128, 2, 2, 145, 146, 7, 35, 2, 2, 146, 26, 3, 2, 2, 2, 147, 148, 7,
	48, 2, 2, 148, 28, 3, 2, 2, 2, 149, 150, 7, 44, 2, 2, 150, 30, 3, 2, 2,
	2, 151, 152, 7, 49, 2, 2, 152, 32, 3, 2, 2, 2, 153, 154, 7, 39, 2, 2, 154,
	34, 3, 2, 2, 2, 155, 156, 7, 45, 2, 2, 156, 36, 3, 2, 2, 2, 157, 158, 7,
	47, 2, 2, 158, 38, 3, 2, 2, 2, 159, 160, 5, 87, 44, 2, 160, 161, 5, 81,
	41, 2, 161, 162, 5, 85, 43, 2, 162, 163, 5, 73, 37, 2, 163, 40, 3, 2, 2,
	2, 164, 165, 5, 65, 33, 2, 165, 166, 5, 91, 46, 2, 166, 167, 5, 71, 36,
	2, 167, 42, 3, 2, 2, 2, 168, 169, 5, 93, 47, 2, 169, 170, 5, 99, 50, 2,
	170, 44, 3, 2, 2, 2, 171, 172, 5, 67, 34, 2, 172, 173, 5, 73, 37, 2, 173,
	174, 5, 103, 52, 2, 174, 175, 5, 109, 55, 2, 175, 176, 5, 73, 37, 2, 176,
	177, 5, 73, 37, 2, 177, 178, 5, 91, 46, 2, 178, 46, 3, 2, 2, 2, 179, 180,
	5, 81, 41, 2, 180, 181, 5, 91, 46, 2, 181, 48, 3, 2, 2, 2, 182, 183, 5,
	81, 41, 2, 183, 184, 5, 101, 51, 2, 184, 50, 3, 2, 2, 2, 185, 186, 5, 91,
	46, 2, 186, 187, 5, 105, 53, 2, 187, 188, 5, 87, 44, 2, 188, 189, 5, 87,
	44, 2, 189, 52, 3, 2, 2, 2, 190, 191, 5, 91, 46, 2, 191, 192, 5, 93, 47,
	2, 192, 193, 5, 103, 52, 2, 193, 54, 3, 2, 2, 2, 194, 200, 7, 36, 2, 2,
	195, 199, 10, 2, 2, 2, 196, 197, 7, 36, 2, 2, 197, 199, 7, 36, 2, 2, 198,
	195, 3, 2, 2, 2, 198, 196, 3, 2, 2, 2, 199, 202, 3, 2, 2, 2, 200, 198,
	3, 2, 2, 2, 200, 201, 3, 2, 2, 2, 201, 203, 3, 2, 2, 2, 202, 200, 3, 2,
	2, 2, 203, 230, 7, 36, 2, 2, 204, 210, 7, 98, 2, 2, 205, 209, 10, 3, 2,
	2, 206, 207, 7, 98, 2, 2, 207, 209, 7, 98, 2, 2, 208, 205, 3, 2, 2, 2,
	208, 206, 3, 2, 2, 2, 209, 212, 3, 2, 2, 2, 210, 208, 3, 2, 2, 2, 210,
	211, 3, 2, 2, 2, 211, 213, 3, 2, 2, 2, 212, 210, 3, 2, 2, 2, 213, 230,
	7, 98, 2, 2, 214, 218, 7, 93, 2, 2, 215, 217, 10, 4, 2, 2, 216, 215, 3,
	2, 2, 2, 217, 220, 3, 2, 2, 2, 218, 216, 3, 2, 2, 2, 218, 219, 3, 2, 2,
	2, 219, 221, 3, 2, 2, 2, 220, 218, 3, 2, 2, 2, 221, 230, 7, 95, 2, 2, 222,
	226, 9, 5, 2, 2, 223, 225, 9, 6, 2, 2, 224, 223, 3, 2, 2, 2, 225, 228,
	3, 2, 2, 2, 226, 224, 3, 2, 2, 2, 226, 227, 3, 2, 2, 2, 227, 230, 3, 2,
	2, 2, 228, 226, 3, 2, 2, 2, 229, 194, 3, 2, 2, 2, 229, 204, 3, 2, 2, 2,
	229, 214, 3, 2, 2, 2, 229, 222, 3, 2, 2, 2, 230, 56, 3, 2, 2, 2, 231, 233,
	5, 63, 32, 2, 232, 231, 3, 2, 2, 2, 233, 234, 3, 2, 2, 2, 234, 232, 3,
	2, 2, 2, 234, 235, 3, 2, 2, 2, 235, 243, 3, 2, 2, 2, 236, 240, 7, 48, 2,
	2, 237, 239, 5, 63, 32, 2, 238, 237, 3, 2, 2, 2, 239, 242, 3, 2, 2, 2,
	240, 238, 3, 2, 2, 2, 240, 241, 3, 2, 2, 2, 241, 244, 3, 2, 2, 2, 242,
	240, 3, 2, 2, 2, 243, 236, 3, 2, 2, 2, 243, 244, 3, 2, 2, 2, 244, 254,
	3, 2, 2, 2, 245, 247, 5, 73, 37, 2, 246, 248, 9, 7, 2, 2, 247, 246, 3,
	2, 2, 2, 247, 248, 3, 2, 2, 2, 248, 250, 3, 2, 2, 2, 249, 251, 5, 63, 32,
	2, 250, 249, 3, 2, 2, 2, 251, 252, 3, 2, 2, 2, 252, 250, 3, 2, 2, 2, 252,
	253, 3, 2, 2, 2, 253, 255, 3, 2, 2, 2, 254, 245, 3, 2, 2, 2, 254, 255,
	3, 2, 2, 2, 255, 274, 3, 2, 2, 2, 256, 258, 7, 48, 2, 2, 257, 259, 5, 63,
	32, 2, 258, 257, 3, 2, 2, 2, 259, 260, 3, 2, 2, 2, 260, 258, 3, 2, 2, 2,
	260, 261, 3, 2, 2, 2, 261, 271, 3, 2, 2, 2, 262, 264, 5, 73, 37, 2, 263,
	265, 9, 7, 2, 2, 264, 263, 3, 2, 2, 2, 264, 265, 3, 2, 2, 2, 265, 267,
	3, 2, 2, 2, 266, 268, 5, 63, 32, 2, 267, 266, 3, 2, 2, 2, 268, 269, 3,
	2, 2, 2, 269, 267, 3, 2, 2, 2, 269, 270, 3, 2, 2, 2, 270, 272, 3, 2, 2,
	2, 271, 262, 3, 2, 2, 2, 271, 272, 3, 2, 2, 2, 272, 274, 3, 2, 2, 2, 273,
	232, 3, 2, 2, 2, 273, 256, 3, 2, 2, 2, 274, 58, 3, 2, 2, 2, 275, 281, 7,
	41, 2, 2, 276, 280, 10, 8, 2, 2, 277, 278, 7, 41, 2, 2, 278, 280, 7, 41,
	2, 2, 279, 276, 3, 2, 2, 2, 279, 277, 3, 2, 2, 2, 280, 283, 3, 2, 2, 2,
	281, 279, 3, 2, 2, 2, 281, 282, 3, 2, 2, 2, 282, 284, 3, 2, 2, 2, 283,
	281, 3, 2, 2, 2, 284, 285, 7, 41, 2, 2, 285, 60, 3, 2, 2, 2, 286, 287,
	9, 9, 2, 2, 287, 288, 3, 2, 2, 2, 288, 289, 8, 31, 2, 2, 289, 62, 3, 2,
	2, 2, 290, 291, 9, 10, 2, 2, 291, 64, 3, 2, 2, 2, 292, 293, 9, 11, 2, 2,
	293, 66, 3, 2, 2, 2, 294, 295, 9, 12, 2, 2, 295, 68, 3, 2, 2, 2, 296, 297,
	9, 13, 2, 2, 297, 70, 3, 2, 2, 2, 298, 299, 9, 14, 2, 2, 299, 72, 3, 2,
	2, 2, 300, 301, 9, 15, 2, 2, 301, 74, 3, 2, 2, 2, 302, 303, 9, 16, 2, 2,
	303, 76, 3, 2, 2, 2, 304, 305, 9, 17, 2, 2, 305, 78, 3, 2, 2, 2, 306, 307,
	9, 18, 2, 2, 307, 80, 3, 2, 2, 2, 308, 309, 9, 19, 2, 2, 309, 82, 3, 2,
	2, 2, 310, 311, 9, 20, 2, 2, 311, 84, 3, 2, 2, 2, 312, 313, 9, 21, 2, 2,
	313, 86, 3, 2, 2, 2, 314, 315, 9, 22, 2, 2, 315, 88, 3, 2, 2, 2, 316, 317,
	9, 23, 2, 2, 317, 90, 3, 2, 2, 2, 318, 319, 9, 24, 2, 2, 319, 92, 3, 2,
	2, 2, 320, 321, 9, 25, 2, 2, 321, 94, 3, 2, 2, 2, 322, 323, 9, 26, 2, 2,
	323, 96, 3, 2, 2, 2, 324, 325, 9, 27, 2, 2, 325, 98, 3, 2, 2, 2, 326, 327,
	9, 28, 2, 2, 327, 100, 3, 2, 2, 2, 328, 329, 9, 29, 2, 2, 329, 102, 3,
	2, 2, 2, 330, 331, 9, 30, 2, 2, 331, 104, 3, 2, 2, 2, 332, 333, 9, 31,
	2, 2, 333, 106, 3, 2, 2, 2, 334, 335, 9, 32, 2, 2, 335, 108, 3, 2, 2, 2,
	336, 337, 9, 33, 2, 2, 337, 110, 3, 2, 2, 2, 338, 339, 9, 34, 2, 2, 339,
	112, 3, 2, 2, 2, 340, 341, 9, 35, 2, 2, 341, 114, 3, 2, 2, 2, 342, 343,
	9, 36, 2, 2, 343, 116, 3, 2, 2, 2, 23, 2, 198, 200, 208, 210, 218, 226,
	229, 234, 240, 243, 247, 252, 254, 260, 264, 269, 271, 273, 279, 281, 3,
	2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "','", "')'", "'<'", "'<='", "'>'", "'>='", "'='", "'!='", "'<>'",
	"'~='", "'~!'", "'.'", "'*'", "'/'", "'%'", "'+'", "'-'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "K_LIKE", "K_AND", "K_OR", "K_BETWEEN", "K_IN", "K_IS", "K_NULL", "K_NOT",
	"IDENTIFIER", "NUMERIC_LITERAL", "STRING_LITERAL", "SPACES",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "K_LIKE", "K_AND", "K_OR", "K_BETWEEN", "K_IN", "K_IS", "K_NULL",
	"K_NOT", "IDENTIFIER", "NUMERIC_LITERAL", "STRING_LITERAL", "SPACES", "DIGIT",
	"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O",
	"P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
}

type TSLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewTSLLexer(input antlr.CharStream) *TSLLexer {

	l := new(TSLLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "TSL.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TSLLexer tokens.
const (
	TSLLexerT__0            = 1
	TSLLexerT__1            = 2
	TSLLexerT__2            = 3
	TSLLexerT__3            = 4
	TSLLexerT__4            = 5
	TSLLexerT__5            = 6
	TSLLexerT__6            = 7
	TSLLexerT__7            = 8
	TSLLexerT__8            = 9
	TSLLexerT__9            = 10
	TSLLexerT__10           = 11
	TSLLexerT__11           = 12
	TSLLexerT__12           = 13
	TSLLexerT__13           = 14
	TSLLexerT__14           = 15
	TSLLexerT__15           = 16
	TSLLexerT__16           = 17
	TSLLexerT__17           = 18
	TSLLexerK_LIKE          = 19
	TSLLexerK_AND           = 20
	TSLLexerK_OR            = 21
	TSLLexerK_BETWEEN       = 22
	TSLLexerK_IN            = 23
	TSLLexerK_IS            = 24
	TSLLexerK_NULL          = 25
	TSLLexerK_NOT           = 26
	TSLLexerIDENTIFIER      = 27
	TSLLexerNUMERIC_LITERAL = 28
	TSLLexerSTRING_LITERAL  = 29
	TSLLexerSPACES          = 30
)
